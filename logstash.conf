
input {
  file {
    path =>"/sample-csv/*.csv"
    sincedb_path => "/data/gz-local-read-file-mode.sdb"
    start_position => "beginning"
    # mode => "read"
    # ignore_older => "24 h"
    # file_completed_log_path => "/data/gz-local-read-file-mode-completed.log"

    # discover_interval => 40
    # stat_interval => 0.1
    # mode => "tail"
    # file_completed_action => "log"
    
    # file_sort_by => "path"
    # start_position => "beginning"
  }
}

filter{
    csv{
        separator => ","
        columns => ['subscribe_id','device','device_model','started_at','ended_at','lat','long','position','signal']
        remove_field => ["message"]
    }
    mutate{

        convert => {
            "lat" => "float"
            "long" => "float"
        }
        
    }


## ruby code references
## https://discuss.elastic.co/t/logstash-convert-nil-values-into-a-number/104271/10
## https://www.elastic.co/guide/en/logstash/2.2/plugins-filters-ruby.html
    ruby{
      code => "if event.get('device').nil?
                event.set('device', '')
              end"
    }
    
## comment out due to wrong format for clickhouse
    # date {
    #     match => ["started_at", "yyyy-MM-dd HH:mm:ss"]
    #     target => "started_at"
    #     timezone => "+0800"
    # }
## comment out due to wrong format for clickhouse
    # date {
    #     match => ["ended_at", "yyyy-MM-dd HH:mm:ss"]
    #     target =>"ended_at"
    #     timezone => "+0800"
    # }
    
    prune {
          interpolate => true
          whitelist_names => ['^subscribe_id$','^device$','^device_model$','^started_at$','^ended_at$','^lat$','^long$','^position$','^signal$']
    }
    
}

output {
    clickhouse {
      http_hosts => ["http://192.168.3.78:8123"]
      table => "location"
      request_tolerance => 1
      flush_size => 1000
      pool_max => 1000
    }
}

# output {
#   stdout {
#     codec => rubydebug
#   }
# }

